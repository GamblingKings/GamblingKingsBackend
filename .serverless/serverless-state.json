{
  "service": {
    "service": "gamblingkingsbackend",
    "serviceObject": {
      "name": "gamblingkingsbackend"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([^{}]+?)}",
      "name": "aws",
      "runtime": "nodejs12.x",
      "region": "us-west-2",
      "websocketsApiName": "mahjong-websocket",
      "websocketsApiRouteSelectionExpression": "$request.body.action",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "execute-api:ManageConnections"
          ],
          "Resource": [
            "arn:aws:execute-api:*:*:**/@connections/*"
          ]
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:PutItem",
            "dynamodb:GetItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem",
            "dynamodb:BatchGetItem",
            "dynamodb:BatchWriteItem",
            "dynamodb:Query"
          ],
          "Resource": [
            {
              "Fn::GetAtt": [
                "ConnectionDynamoDBTable",
                "Arn"
              ]
            },
            {
              "Fn::GetAtt": [
                "GamesDynamoDBTable",
                "Arn"
              ]
            },
            {
              "Fn::Join": [
                "/",
                [
                  {
                    "Fn::GetAtt": [
                      "ConnectionDynamoDBTable",
                      "Arn"
                    ]
                  },
                  "*"
                ]
              ]
            },
            {
              "Fn::Join": [
                "/",
                [
                  {
                    "Fn::GetAtt": [
                      "GamesDynamoDBTable",
                      "Arn"
                    ]
                  },
                  "*"
                ]
              ]
            }
          ]
        }
      ],
      "environment": {
        "ConnectionDynamoDBTable": {
          "Ref": "ConnectionDynamoDBTable"
        },
        "GamesDynamoDBTable": {
          "Ref": "GamesDynamoDBTable"
        },
        "API_REGION": "us-west-2"
      },
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ConnectionManagerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/gamblingkingsbackend-dev-connectionManager"
            }
          },
          "DefaultMessagesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/gamblingkingsbackend-dev-defaultMessages"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "gamblingkingsbackend",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/gamblingkingsbackend-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/gamblingkingsbackend-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "execute-api:ManageConnections"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:execute-api:*:*:*/@connections/*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "gamblingkingsbackend",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "AwsUnderscoresdkUnderscorelayerLambdaLayer": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
              "Content": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/gamblingkingsbackend/dev/1591060669371-2020-06-02T01:17:49.371Z/src/aws_sdk_layer.zip"
              },
              "LayerName": "aws_sdk_layer",
              "Description": "layer that holds the aws_sdk"
            }
          },
          "ConnectionManagerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/gamblingkingsbackend/dev/1591060669371-2020-06-02T01:17:49.371Z/gamblingkingsbackend.zip"
              },
              "FunctionName": "gamblingkingsbackend-dev-connectionManager",
              "Handler": "src/handler.connectionManager",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "ConnectionDynamoDBTable": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"ConnectionDynamoDBTable\"]"
                  },
                  "GamesDynamoDBTable": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"GamesDynamoDBTable\"]"
                  },
                  "API_REGION": "us-west-2"
                }
              }
            },
            "DependsOn": [
              "ConnectionManagerLogGroup"
            ]
          },
          "ConnectionManagerLambdaVersionKZZIn1tkKZ5xEosApymafatKeRf8cvkmTParfPhuBA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ConnectionManagerLambdaFunction"
              },
              "CodeSha256": "yNs0jVf/20hJP/1Q/iyEKfp6dpSvLKfq8z3yjeF/gfA="
            }
          },
          "DefaultMessagesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/gamblingkingsbackend/dev/1591060669371-2020-06-02T01:17:49.371Z/gamblingkingsbackend.zip"
              },
              "FunctionName": "gamblingkingsbackend-dev-defaultMessages",
              "Handler": "src/handler.defaultMessage",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "ConnectionDynamoDBTable": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"ConnectionDynamoDBTable\"]"
                  },
                  "GamesDynamoDBTable": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"GamesDynamoDBTable\"]"
                  },
                  "API_REGION": "us-west-2"
                }
              }
            },
            "DependsOn": [
              "DefaultMessagesLogGroup"
            ]
          },
          "DefaultMessagesLambdaVersion8BepBRIPzcEgQbeZAcgPf72zVpI3DrIJU04ESQTqu4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DefaultMessagesLambdaFunction"
              },
              "CodeSha256": "yNs0jVf/20hJP/1Q/iyEKfp6dpSvLKfq8z3yjeF/gfA="
            }
          },
          "WebsocketsApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "mahjong-websocket",
              "RouteSelectionExpression": "$request.body.action",
              "Description": "Serverless Websockets",
              "ProtocolType": "WEBSOCKET"
            }
          },
          "ConnectionManagerWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "ConnectionManagerLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "DefaultMessagesWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "DefaultMessagesLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "ConnectionManagerLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "ConnectionManagerLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ConnectionManagerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "DefaultMessagesLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "DefaultMessagesLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DefaultMessagesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "SconnectWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$connect",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "ConnectionManagerWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "SdisconnectWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$disconnect",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "ConnectionManagerWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "SdefaultWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$default",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "DefaultMessagesWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "WebsocketsDeploymentStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "StageName": "dev",
              "Description": "Serverless Websockets",
              "DeploymentId": {
                "Ref": "WebsocketsDeployment3Fnfm4xvW98CIQXg9UxHMI0RHguZLektrmd7mCo2zTw"
              }
            }
          },
          "WebsocketsDeployment3Fnfm4xvW98CIQXg9UxHMI0RHguZLektrmd7mCo2zTw": {
            "Type": "AWS::ApiGatewayV2::Deployment",
            "DependsOn": [
              "SconnectWebsocketsRoute",
              "SdisconnectWebsocketsRoute",
              "SdefaultWebsocketsRoute"
            ],
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "Description": "Serverless Websockets"
            }
          },
          "ConnectionDynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "ConnectionsTable",
              "AttributeDefinitions": [
                {
                  "AttributeName": "connectionId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "connectionId",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "GamesDynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "GamessTable",
              "AttributeDefinitions": [
                {
                  "AttributeName": "gameId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "gameId",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "AwsUnderscoresdkUnderscorelayerLambdaLayerQualifiedArn": {
            "Description": "Current Lambda layer version",
            "Value": {
              "Ref": "AwsUnderscoresdkUnderscorelayerLambdaLayer"
            }
          },
          "AwsUnderscoresdkUnderscorelayerLambdaLayerHash": {
            "Description": "Current Lambda layer hash",
            "Value": "8c8786ea54bd0933b8db6f2d5389d3e550645bc2"
          },
          "AwsUnderscoresdkUnderscorelayerLambdaLayerS3Key": {
            "Description": "Current Lambda layer S3Key",
            "Value": "serverless/gamblingkingsbackend/dev/1591060669371-2020-06-02T01:17:49.371Z/src/aws_sdk_layer.zip"
          },
          "ConnectionManagerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ConnectionManagerLambdaVersionKZZIn1tkKZ5xEosApymafatKeRf8cvkmTParfPhuBA"
            }
          },
          "DefaultMessagesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DefaultMessagesLambdaVersion8BepBRIPzcEgQbeZAcgPf72zVpI3DrIJU04ESQTqu4"
            }
          },
          "ServiceEndpointWebsocket": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "wss://",
                  {
                    "Ref": "WebsocketsApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-plugin-typescript"
    ],
    "pluginsData": {},
    "functions": {
      "connectionManager": {
        "handler": "src/handler.connectionManager",
        "events": [
          {
            "websocket": {
              "route": "$connect"
            }
          },
          {
            "websocket": {
              "route": "$disconnect"
            }
          }
        ],
        "name": "gamblingkingsbackend-dev-connectionManager",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": []
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "ConnectionManagerLambdaVersionKZZIn1tkKZ5xEosApymafatKeRf8cvkmTParfPhuBA"
      },
      "defaultMessages": {
        "handler": "src/handler.defaultMessage",
        "events": [
          {
            "websocket": {
              "route": "$default"
            }
          }
        ],
        "name": "gamblingkingsbackend-dev-defaultMessages",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": []
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "DefaultMessagesLambdaVersion8BepBRIPzcEgQbeZAcgPf72zVpI3DrIJU04ESQTqu4"
      }
    },
    "resources": {
      "Resources": {
        "ConnectionDynamoDBTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "ConnectionsTable",
            "AttributeDefinitions": [
              {
                "AttributeName": "connectionId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "connectionId",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "GamesDynamoDBTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "GamessTable",
            "AttributeDefinitions": [
              {
                "AttributeName": "gameId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "gameId",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {
      "aws_sdk_layer": {
        "description": "layer that holds the aws_sdk",
        "package": {
          "artifact": "src/aws_sdk_layer.zip"
        }
      }
    },
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\Users\\Vincent\\Desktop\\GamblingKingsBackend\\.build\\.serverless\\gamblingkingsbackend.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/gamblingkingsbackend/dev/1591060669371-2020-06-02T01:17:49.371Z",
    "artifact": "gamblingkingsbackend.zip"
  }
}